/*
 * ODS
 *
 * This is a simple REST API to access Block Chain on Ethereum and handling Smart Contracts and Payment Channel as well.
 *
 * API version: 1.0.0
 * Contact: u.kuehn@tu-berlin.de
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"

	"github.com/rs/zerolog/log"

	"net/http"
	"strings"

	"github.com/gorilla/mux"

	pch "restapidemo/files/paymentchannel"
)

//Route does
type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

//Routes does
type Routes []Route

//CurrentRouter does
var CurrentRouter *mux.Router

//NewRouter create a router for rest api
func NewRouter() *mux.Router {
	// read default config
	pch.ExecuteReadConfig()

	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	CurrentRouter = router
	return router
}

//Index returns Hello World as proof of work
func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
	log.Info().Msg("Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v2/",
		Index,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/v2/ethereum/createUser",
		CreateUser,
	},

	Route{
		"DeployContract",
		strings.ToUpper("Post"),
		"/v2/ethereum/deployContract/{gasLimit}",
		DeployContract,
	},

	Route{
		"EstimateDeployContractGas",
		strings.ToUpper("Post"),
		"/v2/ethereum/estimateDeployContractGas/{alias}",
		EstimateDeployContractGas,
	},

	Route{
		"EstimateTransactionGas",
		strings.ToUpper("Get"),
		"/v2/ethereum/estimateTransactionGas/{alias}",
		EstimateTransactionGas,
	},

	Route{
		"ExecuteTransaction",
		strings.ToUpper("Post"),
		"/v2/ethereum/executeTransaction/{gasLimit}",
		ExecuteTransaction,
	},

	Route{
		"Close",
		strings.ToUpper("Post"),
		"/v2/paymentchannel/close/{alias}",
		Close,
	},

	Route{
		"Disconnect",
		strings.ToUpper("Post"),
		"/v2/paymentchannel/disconnect/{alias}",
		Disconnect,
	},

	Route{
		"Info",
		strings.ToUpper("Get"),
		"/v2/paymentchannel/info/{alias}",
		Info,
	},

	Route{
		"Open",
		strings.ToUpper("Post"),
		"/v2/paymentchannel/open/{alias}",
		Open,
	},

	Route{
		"Connect",
		strings.ToUpper("Post"),
		"/v2/paymentchannel/connect/{alias}",
		Connect,
	},

	Route{
		"Send",
		strings.ToUpper("Post"),
		"/v2/paymentchannel/send/{alias}",
		Send,
	},

	Route{
		"ValidateOrDeploy",
		strings.ToUpper("Post"),
		"/v2/paymentchannel/validateordeploy/{alias}",
		ValidateOrDeploy,
	},
}
